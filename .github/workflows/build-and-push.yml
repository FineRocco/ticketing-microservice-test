name: Test, Build, and Push to Docker Hub

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      # 1. Checks out your repository so the job can access your code
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sets up the .NET environment
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x' # Match the SDK version in your Dockerfile

      # 3. Restore NuGet packages
      # This downloads all project dependencies before building or testing.
      - name: Restore dependencies
        run: dotnet restore

      # 4. Run unit tests
      - name: Run unit tests
        run: dotnet test --no-restore --verbosity normal

      # 5. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 6. Build and push the Docker image to Docker Hub
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/microservicetest:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/microservicetest:${{ github.sha }}
  deploy-to-production:
    needs: build-and-push # This should be the name of your build job
    runs-on: ubuntu-latest
    environment:
      name: production
      url: http://localhost:8080 
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure kubectl for Production
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.PRODUCTION_KUBE_CONFIG }}" > $HOME/.kube/config
          echo "Kubeconfig configured for Production."

      - name: Deploy to Production Cluster
        run: |
          echo "Deploying image tag: ${{ needs.build-and-push.outputs.image_tag }}"
          # CORRECTED COMMANDS BELOW
          # We use the correct deployment name ('microservice') and specify the correct namespace.
          kubectl set image deployment/microservice microservice=${{ secrets.DOCKERHUB_USERNAME }}/microservicetest:${{ needs.build-and-push.outputs.image_tag }} --namespace=microservicetest-deployment
      
      - name: Verify Deployment
        run: |
          echo "Waiting for deployment to complete..."
          # CORRECTED COMMANDS BELOW
          # We check the status of the correct deployment in the correct namespace.
          kubectl rollout status deployment/microservice --namespace=microservicetest-deployment